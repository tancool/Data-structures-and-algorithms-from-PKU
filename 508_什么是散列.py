
'''
- 散列表（hash table，又称哈希表）是一种数据集，其中数据项的存储方式尤其有利于将来快速的查找定位

- 散列表中的每一个存储位置，称为槽（slot），可以用来保存数据项，每个槽有一个唯一的名称。

- 例如：一个包含11个槽的散列表，槽的名称分别为0～10
- 在插入数据项之前，每个槽的值都是None，表示空槽

- 实现从数据项到存储槽名称的转换的，称为散列函数（hash function）

- 下面示例中，散列函数接受数据项作为参数，返回整数值0～10，表示数据项存储的槽号（名称）

- 有一种常用的散列方法是“求余数”，将数据项除以散列表的大小，得到的余数作为槽号。
    - 实际上“求余数”方法会以不同形式出现在所有散列函数里.因为散列函数返回的槽号必须在散列表大小范围之内，所以一般会对散列表大小求余
    - 例如10个槽  h(item) = item % 11
    - 假如还要保存44，h(44)=0，它跟77被分配到同一个0#槽中，这种情况称为“冲突collision”

- 散列表的查找是O(1)
'''